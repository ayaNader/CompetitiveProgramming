#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
class UnsealTheSafe {
public:
	int n;
	ll dp[40][15];
	vector<vector<int>>adj;
	ll go(int ind,int prev){
		if(ind==n)
			return 1;
		if(dp[ind][prev]!=-1)
			return dp[ind][prev];
		ll ret=0;
		for(short i=0;i<adj[prev].size();i++)
			ret+=go(ind+1,adj[prev][i]);
		return dp[ind][prev]=ret;
	}
	long long countPasswords(int N) {
		n=N;
		memset(dp,-1,sizeof dp);
		adj.resize(15);
		adj[0].push_back(7);
		adj[1].push_back(2);adj[1].push_back(4);
		adj[2].push_back(1);adj[2].push_back(5);adj[2].push_back(3);
		adj[3].push_back(2);adj[3].push_back(6);
		adj[4].push_back(7);adj[4].push_back(1);adj[4].push_back(5);
		adj[5].push_back(2);adj[5].push_back(4);adj[5].push_back(6);adj[5].push_back(8);
		adj[6].push_back(3);adj[6].push_back(5);adj[6].push_back(9);
		adj[7].push_back(4);adj[7].push_back(8);adj[7].push_back(0);
		adj[8].push_back(5);adj[8].push_back(7);adj[8].push_back(9);
		adj[9].push_back(6);adj[9].push_back(8);
		ll ret=0;
		for(short i=0;i<=9;i++)
			ret+=go(1,i);
		return ret;
	}
};
// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
bool KawigiEdit_RunTest(int testNum, int p0, bool hasAnswer, long long p1) {
	cout << "Test " << testNum << ": [" << p0;
	cout << "]" << endl;
	UnsealTheSafe *obj;
	long long answer;
	obj = new UnsealTheSafe();
	clock_t startTime = clock();
	answer = obj->countPasswords(p0);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
	if (hasAnswer) {
		cout << "Desired answer:" << endl;
		cout << "\t" << p1 << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << answer << endl;
	if (hasAnswer) {
		res = answer == p1;
	}
	if (!res) {
		cout << "DOESN'T MATCH!!!!" << endl;
	} else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
		cout << "FAIL the timeout" << endl;
		res = false;
	} else if (hasAnswer) {
		cout << "Match :-)" << endl;
	} else {
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main() {
	bool all_right;
	all_right = true;

	int p0;
	long long p1;

	{
		// ----- test 0 -----
		p0 = 2;
		p1 = 26ll;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
	}

	{
		// ----- test 1 -----
		p0 = 3;
		p1 = 74ll;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
	}

	{
		// ----- test 2 -----
		p0 = 25;
		p1 = 768478331222ll;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
	}

	if (all_right) {
		cout << "You're a stud (at least on the example cases)!" << endl;
	} else {
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
// END KAWIGIEDIT TESTING

//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
